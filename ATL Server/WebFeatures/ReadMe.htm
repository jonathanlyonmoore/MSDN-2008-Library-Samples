<!--TO READ THIS HELP FILE, RIGHT-CLICK ON THE FILE NAME IN THE
    SOLUTION EXPLORER PANE AND SELECT "VIEW IN BROWSER"-->

<html><head><title>WebFeatures Sample: Demonstrates Various ATL Server Tasks</title></head><body><h1>WebFeatures Sample: Demonstrates Various ATL Server Tasks</h1><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><p /><p>Demonstrates a variety of tasks related to writing ATL Server Web applications, including setting and viewing cookies, using session state, handling uploaded files, pulling images from a database, recognizing users' localization preferences, protecting resources, registering users with a Web site, and more.</p><p>The WebFeatures sample consists of a number of small, focused Web application DLLs that each show one particular aspect of using ATL Server to write Web applications. All the Web application DLLs use the same ISAPI extension DLL and can be viewed from the links on the default Web page. The code for each feature being demonstrated is in a separate subfolder of WebFeatures.</p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Note </th></tr><tr><td><p>In the file ShowCookies.cpp, the code that allows you to view cookies echoes cookies to the client. This is done for demonstration only. In production code, you should never echo cookies to the client. In addition, the following line of code echoes an error message back to the client, a practice that you should also avoid:</p></td></tr></table></div><div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><td colspan="2"><pre>m_HttpResponse &lt;&lt; "&lt;i&gt;" &lt;&lt; GetErrorString() &lt;&lt; "&lt;/i&gt;";</pre></td></tr></table></span></div><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Security Note </th></tr><tr><td><p>This sample code is provided to illustrate a concept and should not be used in applications or Web sites, as it may not illustrate the safest coding practices.</p></td></tr></table></div><h1 class="heading">Building and Running the Sample</h1><div id="sectionSection0" class="seeAlsoNoToggleSection"><h4 class="subHeading">To build and run this sample</h4><div class="subSection"><ol><li><p>Open the solution file, WebFeatures.sln, in the Visual Studio development environment.</p></li><li><p>Build the solution. This will also deploy the solution to the local Web server.</p></li><li><p>Use a Web browser to view http://localhost/webfeatures/default.htm.</p></li><li><p>See ConfirmUser and ShowImage for the database installation steps for those parts of the sample.</p></li></ol></div><p>For more information, see the following links:</p><h3 class="subHeading"></h3><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr><th>
              Feature
            </th><th>
              Description
            </th></tr><tr><td><p>ConfirmUser</p></td><td><p>Demonstrates how to register a user with a Web site and confirm the validity of the user's e-mail address.</p></td></tr><tr><td><p>Cookies</p></td><td><p>Demonstrates how to set cookie data in the response and get cookie data from a request.</p></td></tr><tr><td><p>ForceLogin</p></td><td><p>Demonstrates custom user validation and the use of a cookie to identify a previously validated user. Also shows simple use of the CryptoAPI.</p></td></tr><tr><td><p>HelloWorld</p></td><td><p>Demonstrates how to implement the simplest possible ATL Server request handler.</p></td></tr><tr><td><p>NotModified</p></td><td><p>Demonstrates how to send the Last-Modified response header and check for the If-Modified-Since request header to avoid generating a response body and transmitting data to the client unnecessarily.</p></td></tr><tr><td><p>ShowAccept</p></td><td><p>Demonstrates how to read the HTTP_ACCEPT, HTTP_ACCEPT_ENCODING, HTTP_ACCEPT_LANGUAGE, and HTTP_ACCEPT_CHARSET request headers and order the elements according to the user's preference.</p></td></tr><tr><td><p>ShowBrowser</p></td><td><p>Demonstrates how to get information about the user's browser from the browser capabilities service.</p></td></tr><tr><td><p>ShowErrors</p></td><td><p>Demonstrates techniques for generating error responses to send to the user. Shows the use of ATL Server's default error response, custom static responses, and custom dynamic responses.</p></td></tr><tr><td><p>ShowFiles</p></td><td><p>Demonstrates the use of the request object's files collection to get information about files uploaded to the server.</p></td></tr><tr><td><p>ShowForm</p></td><td><p>Demonstrates the use of the request object's form variables collection to get information about forms sent to the server.</p></td></tr><tr><td><p>ShowImage</p></td><td><p>Demonstrates how to convert, store, and retrieve images. Allows the user to upload images that the server will attempt to convert to PNG format. If successful, the PNG format data is added to a database. Images in the database can be downloaded using a URL that contains the ID of the image as a parameter in the query string.</p></td></tr><tr><td><p>ShowLocalized</p></td><td><p>Demonstrates how to match the user's language settings against languages supported by the server and display content specific to the user's locale. The server attempts to use the language setting to display a localized phrase loaded from a resource and the appropriately formatted system time.</p></td></tr><tr><td><p>ShowQueryString</p></td><td><p>Demonstrates the use of the request object's query parameters collection to get information about the query string sent to the server.</p></td></tr><tr><td><p>ShowRequest</p></td><td><p>Demonstrates how to gather information about the current request by retrieving the properties of the <b>CHttpRequest</b> object.</p></td></tr><tr><td><p>ShowSession</p></td><td><p>Demonstrates how to get and set session information.</p></td></tr><tr><td><p>ShowUser</p></td><td><p>Demonstrates the server variables that are affected by the user and the security settings used on the page, shows how to require authentication by returning a 401 (Unauthorized) status code if the LOGON_USER server variable is empty, and shows how to get the impersonation token for the client.</p></td></tr><tr><td><p>ShowVariables</p></td><td><p>Demonstrates how to retrieve the values of the server variables that IIS makes available to your ISAPI extension and request handlers.</p></td></tr></table></div></div></div><div id="footer"><div class="footerLine"></div>
          © Microsoft Corporation. All rights reserved.  Send <a href="mailto:DevDocs@microsoft.com?subject=Documentation Feedback :WebFeatures Sample: Demonstrates Various ATL Server Tasks">comments</a> about this topic to Microsoft.
      </div></div></body></html>
