<!--TO READ THIS HELP FILE, RIGHT-CLICK ON THE FILE NAME IN THE
    SOLUTION EXPLORER PANE AND SELECT "VIEW IN BROWSER"-->

<html><head><title>DataSetConsumer Sample: Consumes Multiple Table Datasets</title></head><body><h1>DataSetConsumer Sample: Consumes Multiple Table Datasets</h1><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><p /><p>Demonstrates how to consume multiple table datasets from an unmanaged Visual C++ client using an XML Web service proxy.</p><p>The DataSetConsumer sample illustrates how an unmanaged Web application can consume data from a managed XML Web service. DataSetConsumer is an ATL Server application that consumes a multiple table dataset exposed through an XML Web service, WebService1, which you create using ASP.NET.</p><p>DataSetConsumer also shows how to use Web references to support the consumption of multiple table datasets. Web references convert single-table datasets into C++ structures but treat multiple-table datasets as XML streams. Therefore, the corresponding XML Web service method in the proxy class returns the full XML serialization of the dataset as string data. It must then be parsed to be useful in most applications.</p><p>DataSetConsumer corresponds closely to the topic <MSHelp:link keywords="8F17FA95-6028-47F4-AB0B-E3EC55869089" tabindex="0" >Walkthrough: Visual C++ Applications Consuming Data from .NET Framework Components</MSHelp:link>. The DataSetConsumer application accesses multiple tables in a dataset, while the walkthrough accesses a single table.</p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Security Note </th></tr><tr><td><p>This sample code is provided to illustrate a concept and should not be used in applications or Web sites, as it may not illustrate the safest coding practices.</p></td></tr></table></div><h1 class="heading">Requirements</h1><div id="requirementsSection" class="section"><ul><li><p>IIS must be installed and running.</p></li><li><p>At least one SQL Server database must be installed. If you do not have the SQL Server 2000 client tools, use the utility described in <MSHelp:link keywords="1E22C29B-0532-4C63-8D4E-E4A5F3F72C5C" tabindex="0" >Sample Database Installation Utility</MSHelp:link>.</p></li></ul></div><h1 class="heading">Demonstrates</h1><div id="demonstratesSection" class="section"><p><MSHelp:link keywords="A7DDAA5D-4672-405B-91B3-39DE65D7E3A2" tabindex="0" >Adding and Removing Web References</MSHelp:link> | <MSHelp:link keywords="85ADEEEE-00C3-4F57-93E1-C778D4EF9B52" tabindex="0" >ADO.NET Datasets</MSHelp:link> | <MSHelp:link keywords="791DB0CA-80DA-4982-9F93-56FCF8E55389" tabindex="0" >Creating XML Web Service Clients</MSHelp:link> | <MSHelp:link keywords="frlrfSystemDataDataSetClassTopic" tabindex="0" >DataSet Class</MSHelp:link> | <MSHelp:link keywords="93C8A7F0-C0D5-42A0-BB6F-02C25054E272" tabindex="0" >request_handler</MSHelp:link> | <MSHelp:link keywords="57D7F506-B69C-4A4B-A03A-5CB8CA77FAD2" tabindex="0" >soap_handler</MSHelp:link> | <MSHelp:link keywords="27E0776C-EE10-4D58-860A-9A37BB3D7F30" tabindex="0" >soap_method</MSHelp:link> | <MSHelp:link keywords="xmconXMLDOMUserGuide" tabindex="0" >XML DOM User Guide</MSHelp:link></p></div><h1 class="heading">Building and Running the Sample</h1><div id="sectionSection0" class="seeAlsoNoToggleSection"><p>To use this sample, follow the steps in this section. You will create an XML Web service project <code>WebService1</code> that defines a Web method to access data from a dataset. You then add a Web reference, which creates a proxy class for the XML Web service. DataSetConsumer uses an instance of this proxy to call the XML Web service method in <code>WebService1</code>. <code>WebService1</code> returns the dataset as type <b>BSTR</b>, and DataSetConsumer loads it as XML, using the DOM and the MSXML parser to parse the string and print the data as HTML.</p><h4 class="subHeading">To create an ASP.NET Web service project to access a dataset</h4><div class="subSection"><ol><li><p>Create a new XML Web service using ASP.NET. </p><p>On the <b>File</b> menu, click <b>New</b>, and then click <b>Project</b>. The <b>New Project</b> dialog box appears. Click <b>Visual C# Projects</b> in the Project Types pane, and then click <b>ASP.NET Web Service</b> in the Templates pane. In the <b>Name</b> box, enter <b>WebService1</b>. Click <b>OK</b>.  </p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Note </th></tr><tr><td><p><b>Note</b>   The location should be the default location (<code>http://localhost/WebService1</code>). </p></td></tr></table></div><p>When the project has been created, you will see Service1.asmx.cs in the Design pane. </p></li><li><p>Create a data connection. </p><p>In Server Explorer, right-click <b>Data Connection</b>. On the shortcut menu, click <b>Add Connection</b>. The <b>Data Link Properties</b> dialog box appears. Complete it to create a data connection to a database, for example, the Northwind database. </p></li><li><p>Add tables and data adapters. </p><p>Open the <b>Tables</b> node of your new data connection and drag two tables from Server Explorer to the Design pane. Two DataAdapters and one data connection will appear in the Design pane. </p></li><li><p>Generate a dataset. </p><p>On the <b>Data</b> menu, click <b>Generate Dataset</b>. The <b>Generate Dataset</b> dialog box appears. Choose a <b>New Dataset</b> named <code>DataSet1</code> (the default), and add both tables to the dataset. Also select the <b>Add this dataset to the designer</b> box (optional but recommended). Click <b>OK</b> to create the dataset (named <code>dataSet1</code> by default). </p></li><li><p>Implement a Web method. </p><p>Right-click on the Service1.asmx.cs design surface in the Design pane. On the shortcut menu, click <b>View</b> <b>Code</b>. The code for Service1.asmx.cs appears in the Edit pane. Scroll to the bottom of the file to the <code>HelloWorld</code> example Web method:  </p><div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><td colspan="2"><pre>//      [WebMethod]
//      public string HelloWorld()
//      {
//         return "Hello World";
//      }</pre></td></tr></table></span></div><p>In place of the <code>HelloWorld</code> example code, implement a new Web method named <code>GetDataSet</code> as follows:  </p><div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><td colspan="2"><pre>      [WebMethod]
      public DataSet1 GetDataSet()
      {
         this.sqlDataAdapter1.Fill (this.dataSet11);
         return dataSet11;
      }</pre></td></tr></table></span></div><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Note </th></tr><tr><td><p>This code assumes that you use a SQL Server database.</p></td></tr></table></div></li><li><p>Build the <code>WebService1</code> project. On the <b>Build</b> menu, click <b>Build Solution</b>.</p></li></ol></div><h4 class="subHeading">To consume data from DataSetConsumer</h4><div class="subSection"><ol><li><p>Open the <code>DataSetConsumer</code> project. </p><p>Open the solution file, DataSetConsumer.sln, in the Visual Studio development environment.  </p><p>Make sure that DataSetConsumer.h contains this line:  </p><div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><td colspan="2"><pre>#include "Service1.h"</pre></td></tr></table></span></div></li><li><p>Add a Web reference to the project. </p><p>Adding a Web reference will generate a proxy class for the XML Web service. An XML Web service client can call a method on the proxy, which in turn does the necessary work to remotely invoke the call over the network to call the corresponding XML Web service method. By default, the proxy class uses SOAP to access the corresponding method, because SOAP supports the richest set of data types of the three supported protocols (SOAP, HTTP-GET, and HTTP-POST). Adding a Web reference can generate proxy classes for the latter two protocols as well.  </p><p>In Solution Explorer, right-click the <b>DataSetConsumer</b> project node. On the shortcut menu, click <b>Add Web Reference</b>.  </p><p>The <b>Add Web Reference</b> dialog box appears.  </p><p>In the left pane of the <b>Add Web Reference</b> dialog box, click <b>Web References on Local Machine</b> and wait for the wizard to download the XML Web service files. When the files are finished downloading, a link and URL for each registered XML Web service will appear in the left pane. Click the link for the <code>Service1</code> Web service with the URL:  </p><div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><td colspan="2"><pre>http://localhost/WebService1/Service1.asmx</pre></td></tr></table></span></div><p>The contents of the XML Web service's description file appears in the left pane. The Web service description is an XML document written in an XML grammar called Web Service Description Language (WSDL) that defines the format of messages for the XML Web service.  </p><p>In the <b>Web reference name</b> box, enter <b>Service1</b>.  </p><p>Click <b>Add Reference</b>. This adds the proxy class <code>Service1</code> to the <code>DataSetConsumer</code> project. The header file Service1.h appears in Solution Explorer.  </p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Note </th></tr><tr><td><p>In Service1.h, the <code>CService1T</code> constructor is hardcoded to use the URL specified when you added the Web reference. If you want to use DataSetConsumer with another XML Web service, change the URL to match the location of that XML Web service's .asmx file.</p></td></tr></table></div></li><li><p>Build the <code>DataSetConsumer</code> project. On the <b>Build</b> menu, click <b>Build Solution</b>.</p></li><li><p>Run the client application. </p><p>On the <b>Debug</b> menu, click <b>Start Without Debugging</b>.  </p><p>When prompted for a URL, enter the following URL:  </p><div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><td colspan="2"><pre>http://localhost/DataSetConsumer/DataSetConsumer.srf</pre></td></tr></table></span></div><p>Click <b>OK</b>. The Web browser appears, displaying the Northwind data accessed through the XML Web service. </p></li></ol></div></div></div><div id="footer"><div class="footerLine"></div>
          © Microsoft Corporation. All rights reserved.  Send <a href="mailto:DevDocs@microsoft.com?subject=Documentation Feedback :DataSetConsumer Sample: Consumes Multiple Table Datasets">comments</a> about this topic to Microsoft.
      </div></div></body></html>
