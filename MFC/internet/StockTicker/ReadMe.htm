<!--TO READ THIS HELP FILE, RIGHT-CLICK ON THE FILE NAME IN THE
    SOLUTION EXPLORER PANE AND SELECT "VIEW IN BROWSER"-->

<html><head><title>StockTicker Sample: Displays Web Information in an ATL Control</title></head><body><h1>StockTicker Sample: Displays Web Information in an ATL Control</h1><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><p /><p>The StockTicker sample downloads stock information from the Web and displays it in an ATL control that scrolls the data from right to left. The control updates the data at set intervals, which the user sets.</p><p>StockTicker contains four parts:  </p><ul><li><p>Shared ATL component (<code>stockquotes</code>).</p></li><li><p>ATL control (<code>stocktickeratl</code>).</p></li><li><p>ISAPI Extension DLL (<code>stocksourcemfc</code>).</p></li><li><p>MFC container app (<code>containermfc</code>). You can rename this .exe file.</p></li></ul><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Security Note </th></tr><tr><td><p>This sample code is provided to illustrate a concept and should not be used in applications or Web sites, as it may not illustrate the safest coding practices.</p></td></tr></table></div><h1 class="heading">Building and Running the Sample</h1><div id="sectionSection0" class="seeAlsoNoToggleSection"><h4 class="subHeading">To build and run the StockTicker sample</h4><div class="subSection"><ol><li><p>Open the solution StockTicker.sln.</p></li><li><p>On the <b>Build</b> menu, click <b>Build</b>.</p></li><li><p>Use <code>regsvr32</code> to register two DLLs: <code>stockquotes.dll</code> and <code>stocktickeratl.dll</code>. You may need to register <code>ATL.dll</code>, also. </p><p>The ISAPI Extension DLL mimics a stock data source. It should be installed on a computer where Web server software (such as Microsoft Internet Information Services [IIS]) has been installed. You must tell StockTicker where this DLL is located. For instructions on how to use the ISAPI Extension DLL, see below. </p></li><li><p>Run <code>containermfc.exe</code>. Right-click in the client area of the application to display a shortcut menu. Use this menu to change the behavior and properties of StockTicker, as described in a following section.</p></li></ol></div></div><h1 class="heading">How to Add Stock Source Web Sites</h1><div id="sectionSection1" class="seeAlsoNoToggleSection"><p>Follow these steps to add your own stock source Web site.  </p><ol><li><p>Edit <code>stockquotes\stockquotes_.h</code>. Examine the <code>CSQSISAPIDll</code> class. You can use the class as an example for creating new stock quote classes.</p></li><li><p>Create a new class, derived from <code>CStockQuoteSource</code>.</p></li><li><p>In the new class constructor, set <code>m_strURL</code> to the full URL of the Web site from where to retrieve data. Be sure to include the command to retrieve the stock data.</p></li><li><p>The format of the HTML returned from the Web site may require that you override <code>SetStockInfo</code> and/or <code>ParseStockInfo</code>.</p></li><li><p>Rebuild the component and register it.</p></li></ol><p>If your selected site returns data resembling <code>CONAME: &lt;NA&gt;</code>, where <code>CONAME</code> is the stock symbol, either the site could not be accessed, or the source class you created could not find the stock information from the HTML.</p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Note </th></tr><tr><td><p>The format, either decimal or fractional, of the stock data may differ among the stocks you choose to monitor. StockTicker makes no attempt to alter the data to make it consistent.</p></td></tr></table></div></div><h1 class="heading">Behavior and Properties of StockTicker</h1><div id="sectionSection2" class="seeAlsoNoToggleSection"><dl><dt><b>Stocks</b></dt><dd><p>Displays a dialog box through which you can add or remove the stock symbols to monitor. The dialog box is initialized with the current list of stock symbols.</p></dd></dl><dl><dt><b>Update Now</b></dt><dd><p>Updates the stock information from the Web.</p></dd></dl><dl><dt><b>Properties</b></dt><dd><p>The Properties dialog box has three property pages: color, font, and custom. If the stock color and font property pages do not display in the Properties dialog box, make sure you have registered <code>msstkprp.dll</code>.</p><p>You can change the following properties.   </p><ul><li><p><b>Ticker Speed</b>   Move the slider to increase or decrease the rate at which the stock information scrolls from right to left.</p></li><li><p><b>Update Interval</b>   Time in minutes between updates.</p></li><li><p><b>ISAPI Extension DLL URL</b>   Enter the full URL to the ISAPI Extension DLL. Append the following text to the end of the URL: <code>?QueryForStock?Symbol=</code>. </p><p>When specifying the URL for the ISAPI Extension DLL, you need to include the component that is responsible for returning the HTML that contains the stock information.  </p></li></ul></dd></dl><dl><dt><b>About Stock Ticker</b></dt><dd><p>Opens the About dialog box.</p></dd></dl><dl><dt><b>Stay On Top</b></dt><dd><p>StockTicker will stay on top of all other applications; otherwise, it can be hidden by other applications.</p></dd></dl></div><h1 class="heading">Features Used by StockTicker</h1><div id="sectionSection3" class="seeAlsoNoToggleSection"><ul><li><p>ATL COM object</p></li><li><p>ATL Dialog object</p></li><li><p>ATL control</p></li><li><p>MFC Internet (WinInet) classes</p></li><li><p>MFC ISAPI Extension DLL</p></li><li><p>Connection points</p></li><li><p>Persistence</p></li><li><p>Custom enumerators</p></li><li><p>Standard C++ Library</p></li></ul></div><h1 class="heading">StockTicker Components</h1><div id="sectionSection4" class="seeAlsoNoToggleSection"><p>This section provides more detail on the StockTicker components.  </p><dl><dt><b>Stock Quotes Component</b></dt><dd><p>The shared component, the ATL object, is created with the ATL Project Application Wizard. It uses MFC WinInet support and other utility classes. Stock Quotes keeps track of the stocks to be monitored and updates the stock information from the Internet. An application can use this component for either synchronous or asynchronous updates. If the <code>StartUpdating</code> method is called, a child thread is created and the function returns immediately. The child thread creates a timer and waits until the update interval has elapsed. Then it requests an update from the Stock Quotes component. Subsequent calls to <code>Update</code> post a thread message to the child thread indicating that an update should occur, and <code>Update</code> returns immediately. In synchronous mode, <code>Update</code> blocks until the download is complete.</p><p>The Stock Quotes component keeps track of stock data source objects that represent the Web sites from which the stock information is downloaded. When StockTicker updates the stock information, the Stock Quotes component goes through the list of stock data sources and attempts to download the information. If the attempt fails, the component tries to download stock data from the next source. If all of the stock data sources fail to download the information, <code>&lt;NA&gt;</code> will appear in the ticker window after the stock symbol.   </p><p>Stock data comes from the Web site in HTML form. The data must be parsed to find the current price and the price change since the last update. The Stock Quotes component handles this parsing by searching for two keywords: for example, <code>Current:</code> or <code>Change:</code>. The component reads the data following the keywords if that data is either a fractional or decimal number (fractional or decimal).   </p><p>Because stock Web sites may change the way they deliver data, you may have to change the algorithm that Stock Quotes uses to get the stock information.   </p><p>See below for instructions on how to add your own stock data sources. </p></dd></dl><dl><dt><b>ISAPI extension DLL</b></dt><dd><p>The default stock data source is the local ISAPI extension DLL. The ISAPI extension DLL does not return real stock data. Instead, when you request data for a stock, the DLL checks whether the stock symbol is in its list of known stocks. If the stock symbol is on the list, the DLL retrieves the data and randomly adjusts the current stock price up or down. If the stock symbol is new, it is added to the list and an initial stock price is set.</p></dd></dl><dl><dt><b>Stock Ticker Control</b></dt><dd><p>This control was created with the ATL Object Wizard. It uses MFC to make some things easier.</p><p>You can use this control outside of StockTicker.   </p><p>The Stock Ticker control uses the Stock Quotes component to handle the stock information and updates. When it comes time to save itself to a stream, the control will also ask the Stock Quotes component to save itself.   </p><p>On startup, the Stock Ticker control creates the Stock Quotes component and asks it to start updating stock information. The control then starts a timer that it uses for the draw/render loop. When stock data has been updated, the Stock Quotes component notifies the control (through a connection point). The control then gets all the stock information from the Stock Quotes component and creates a string out of it. This string is drawn in the control and scrolls from right to left. </p></dd></dl><dl><dt><b>Stock Ticker Container</b></dt><dd><p>The Stock Ticker container is an MFC Active Control container, created with the MFC Application Wizard. It saves its size and position upon quitting, and it restores its previous state when it is restarted.</p><p>The container also handles the StockTicker menus. </p></dd></dl></div><h1 class="heading">Keywords</h1><div id="sectionSection5" class="seeAlsoNoToggleSection"><p>This sample demonstrates the following keywords:</p><p>IEnumXXX, CWinThread, std::vector, IConnectionPointContainer, CInternetSession, CInternetException, AfxParseURL, CHttpConnection, CHttpFile, COleClientItem, COleDocument, COleDispatchDriver, CreateILockBytesOnHGlobal, StgCreateDocfileOnILockBytes, OleSave, StgIsStorageILockBytes, GetHGlobalFromILockBytes, COleFont, std::basic_istream, std::basic_ostream, CHttpServer, CComPtr, CDialogImpl, std::list, IPersistStreamInit, IFontDisp, IViewObjectEx, CComControl, IOleControl, IPropertyPageImpl, CBitmap, CDC, IPersistStreamInit_Load, IPersistStreamInit_Save, IConnectionPointImpl </p><div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left">Note </th></tr><tr><td><p>Some samples, such as this one, have not been modified to reflect the changes in the Visual C++ wizards, libraries, and compiler, but still demonstrate how to complete your desired task. </p></td></tr></table></div></div></div><div id="footer"><div class="footerLine"></div>
          © Microsoft Corporation. All rights reserved.  Send <a href="mailto:DevDocs@microsoft.com?subject=Documentation Feedback :StockTicker Sample: Displays Web Information in an ATL Control">comments</a> about this topic to Microsoft.
      </div></div></body></html>
